services:
  # ===== ORACLE DB =====
  free23ai:
    image: gvenzl/oracle-free:23.9-slim-faststart
    environment:
      ORACLE_PASSWORD: "Welcome12345"   # para o gvenzl/oracle-free use ORACLE_PASSWORD
    ports:
      - "1521:1521"
    restart: unless-stopped
    networks:
      - monitoring-network

  # ===== ORACLE DB EXPORTER =====
  oracle_exporter:
    image: container-registry.oracle.com/database/observability-exporter:2.1.0
    environment:
      DB_USERNAME: "pdbadmin"
      DB_PASSWORD: "Welcome12345"
      DB_CONNECT_STRING: "free23ai:1521/FREEPDB1"
    ports:
      - "9161:9161"
    depends_on:
      - free23ai
    restart: unless-stopped
    networks:
      - monitoring-network

  # ===== MINIO (Servidor S3 compatÃ­vel) =====
  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "admin12345"
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Console web
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - monitoring-network

  # ===== MINIO INIT (cria buckets 1x) =====
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo 'aguardando MinIO...' &&
      until (mc alias set local http://minio:9000 admin admin12345) do sleep 2; done &&
      echo 'criando buckets...' &&
      mc mb --ignore-existing local/mimir-data &&
      mc mb --ignore-existing local/mimir-rules &&
      echo 'buckets criados'
      "
    networks:
      - monitoring-network

  # ===== GRAFANA MIMIR (single-binary para testes) =====
  mimir:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir/mimir.yaml"]
    volumes:
      - ./mimir:/etc/mimir:ro
      - mimir-data:/data
    ports:
      - "9009:9009"
    depends_on:
      - minio
    restart: unless-stopped
    networks:
      - monitoring-network
  # ===== GRAFANA ALLOY =====
  mimir-gw:
  image: nginx:1.27-alpine
  depends_on: [ mimir ]
  volumes:
    - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
  ports:
    - "8080:8080"
  networks:
    - monitoring-network
  restart: unless-stopped

  # ===== GRAFANA ALLOY =====
  alloy:
    image: grafana/alloy:latest
    command: ["run", "--server.http.listen-addr=0.0.0.0:12345", "--storage.path=/var/lib/alloy", "/etc/alloy/config.alloy"]
    volumes:
      - ./alloy.hcl:/etc/alloy/config.alloy:ro
      - alloy-data:/var/lib/alloy
    environment:
      TENANT_ID: "tenant-local"
      RW_URL: "http://mimir-gw:8080/api/v1/push"
    ports:
      - "12345:12345"
    depends_on:
      - oracle_exporter
      - mimir
    restart: unless-stopped
    networks:
      - monitoring-network

  # ===== GRAFANA =====
  grafana:
    image: grafana/grafana-oss:latest
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3000:3000"
    volumes:
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - mimir
    restart: unless-stopped
    networks:
      - monitoring-network

volumes:
  mimir-data:
  alloy-data:
  minio-data:

networks:
  monitoring-network:
    driver: bridge
